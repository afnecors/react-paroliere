{"version":3,"sources":["data.js","App.js","reportWebVitals.js","index.js"],"names":["dice_list","Face","props","className","dice","Math","floor","random","App","j","x","i","length","this","forceUpdate","id","onClick","newGame","bind","shuffle","map","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAsBeA,EAtBC,CACZ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAE1B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1B,CAAC,KAAM,IAAK,IAAK,IAAK,IAAK,KAC3B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAE1B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAE1B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1B,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,M,MCf9B,SAASC,EAAKC,GACV,OACI,qBAAKC,UAAU,OAAf,SACI,qBAAKA,UAAU,QAAf,SACI,qBAAKA,UAAU,SAAf,SAAyBD,EAAME,KAAKC,KAAKC,MAAM,EAAID,KAAKE,iB,IAoCzDC,E,sKA5BHJ,GACJ,IAAIK,EAAGC,EAAGC,EACV,IAAKA,EAAIP,EAAKQ,OAAS,EAAGD,EAAI,EAAGA,IAC7BF,EAAIJ,KAAKC,MAAMD,KAAKE,UAAYI,EAAI,IACpCD,EAAIN,EAAKO,GACTP,EAAKO,GAAKP,EAAKK,GACfL,EAAKK,GAAKC,EAEd,OAAON,I,gCAIPS,KAAKC,gB,+BAIL,OACI,qBAAKC,GAAG,YAAR,SACI,qBAAKZ,UAAU,UAAUa,QAASH,KAAKI,QAAQC,KAAKL,MAApD,SACKA,KAAKM,QAAQnB,GAAWoB,KAAI,SAAAhB,GAAI,OAC7B,cAACH,EAAD,CAAMG,KAAMA,e,GAtBlBiB,IAAMC,WCFTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7e91e773.chunk.js","sourcesContent":["let dice_list = [\n    [\"s\", \"n\", \"h\", \"r\", \"e\", \"i\"],\n    [\"s\", \"h\", \"e\", \"f\", \"e\", \"i\"],\n    [\"r\", \"l\", \"e\", \"o\", \"u\", \"i\"],\n    [\"d\", \"z\", \"n\", \"v\", \"e\", \"a\"],\n\n    [\"c\", \"f\", \"a\", \"r\", \"i\", \"o\"],\n    [\"qu\", \"o\", \"m\", \"b\", \"o\", \"a\"],\n    [\"t\", \"i\", \"v\", \"e\", \"n\", \"g\"],\n    [\"l\", \"u\", \"n\", \"e\", \"g\", \"o\"],\n\n    [\"l\", \"t\", \"b\", \"r\", \"a\", \"i\"],\n    [\"m\", \"a\", \"d\", \"e\", \"c\", \"p\"],\n    [\"l\", \"e\", \"p\", \"u\", \"s\", \"t\"],\n    [\"n\", \"e\", \"d\", \"o\", \"s\", \"t\"],\n\n    [\"c\", \"a\", \"s\", \"e\", \"r\", \"l\"],\n    [\"a\", \"a\", \"o\", \"i\", \"t\", \"e\"],\n    [\"c\", \"o\", \"t\", \"u\", \"e\", \"n\"],\n    [\"m\", \"a\", \"r\", \"o\", \"s\", \"i\"],\n];\n\nexport default dice_list;","import React from 'react';\nimport dice_list from './data';\nimport './App.css';\n\nfunction Face(props) {\n    return (\n        <div className=\"dice\">\n            <div className=\"inner\">\n                <div className=\"letter\">{props.dice[Math.floor(6 * Math.random())]}</div>\n            </div>\n        </div>\n    );\n}\n\nclass App extends React.Component {\n\n    shuffle(dice) {\n        var j, x, i;\n        for (i = dice.length - 1; i > 0; i--) {\n            j = Math.floor(Math.random() * (i + 1));\n            x = dice[i];\n            dice[i] = dice[j];\n            dice[j] = x;\n        }\n        return dice;\n    }\n\n    newGame() {\n        this.forceUpdate();\n    }\n\n    render() {\n        return (\n            <div id=\"container\">\n                <div className=\"wrapper\" onClick={this.newGame.bind(this)}>\n                    {this.shuffle(dice_list).map(dice => (\n                        <Face dice={dice} />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}